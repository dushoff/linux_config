## WHAT is this? 2019 Sep 19 (Thu)
shopt -s expand_aliases

## Moving from flow 2019 Jul 14 (Sun)
alias voice='/opt/google/chrome/google-chrome --profile-directory=Default --app-id=hfknjgplnkgjihghcidajejfmldhibfm'
alias nmr='sudo service network-manager restart'

alias renow="! screen -list && reboot"
alias shutnow="! screen -list && shutdown now"

## Moving windows to the Dumb TV
alias left='wmctrl -r ":SELECT:" -e 0,0,0,3840,2160'
alias right='wmctrl -r ":SELECT:" -e 0,3840,0,1280,800'

alias nospace='rename "s/ /_/g" *.*'
alias pdfnames='rename "s/[ ,-]+/_/g" *.pdf'
alias suspend='systemctl suspend'
alias sound='gnome-control-center sound'

alias die='exit'
alias q='exit'

alias vpn='~/Dropbox/linux/install/anyconnect*/vpn/vpnui &'  
alias fnr='firefox -ProfileManager -no-remote'
alias miriam='firefox -no-remote -P miriam'

alias browsers='google-chrome & firefox &'
alias ff='firefox &'
alias chrome='google-chrome &'
alias cw='google-chrome &'
alias ncw='google-chrome --new-window'
alias nci='google-chrome --new-window --incognito'

alias hcache="git config --global credential.helper 'cache --timeout=999999'"
alias uncache="git config --global --unset credential.helper"
alias hstore="git config --global credential.helper 'store'"
alias restore="uncache; hstore"

## alias spine='/bin/cp -f ~/git/Planning/addressbook ~/.addressbook; screen alpine'

alias sup='sup-mail'

alias vanilla='R --vanilla'
alias svan='screen -t vanilla R --vanilla'

alias yushan='ssh yushan.mcmaster.ca'
alias sjd='screen -t yushan ssh yushan.mcmaster.ca'

alias ms='ssh ms.mcmaster.ca'
alias sms='screen -t ms ssh ms.mcmaster.ca'
alias smb='screen -t mbx ssh mbx.mcmaster.ca'

alias mbx='ssh mbx.mcmaster.ca'
alias sbx='screen -t mbx ssh mbx.mcmaster.ca'

alias ct='crontab -e'

alias dsn='du -s * |sort -n'
alias dsna='du -s * .??* |sort -n'

## Vim sessions
alias vvs='make vim_session || vi Makefile target.mk'
alias vmt='vi Makefile target.mk'
alias vm='vi Makefile'
alias vml='vi make.log'

alias vl='vim --serverlist'
alias vsave="for instance in \$(vim --serverlist); do vim --servername \$instance --remote-send \$'\e:wa\n'; done"
alias vclose="for instance in \$(vim --serverlist); do vim --servername \$instance --remote-send \$'\e:wqa\n'; done"
alias dropstatus="dropbox status > ~/.dropstatus"
alias vdc="vsave; dclose; hclose; dropstatus"

alias ink='((make all.time | tee make.log ; test "${PIPESTATUS[0]}" -eq 0) || (ice 0 && false))'
alias logcheck="! (grep $'\t' make.log || grep 'git pull' make.log)"
alias vml="vim make.log"
alias rink="ink && ((logcheck && sinklake) || squirrel 0)"
alias sink="vdc; vim ~/.dropstatus ~/.commitnow && rink"
alias cink="ink && ((logcheck && sinklake) || vml)"

alias gas="go Dropbox/archive/swati.pdf"
alias dclose="for instance in \$(vim --serverlist | grep DROP); do vim --servername \$instance --remote-send \$'\e:wqa\n'; done"
alias hclose="for instance in \$(vim --serverlist | grep HOME); do vim --servername \$instance --remote-send \$'\e:wqa\n'; done"

alias gvim='gvim -f'

alias bark='ls ~/Downloads/*.png ~/Downloads/*/*.png | head -1 | xopen'
alias rld='ls -t Downloads/*.* | head -1'
alias tmake='((make target > make.log || true) && bark) &'
alias vmake='(make vtarget > make.log || bark) &'
alias pmake='(make pdftarget > make.log || bark) &'

alias rot13="tr 'A-Za-z' 'N-ZA-Mn-za-m'"

alias va='vi ~/.baliases'
alias ahash='source ~/.baliases'
alias bhash='source ~/.bashrc'

alias cd..='cd ..'

alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'
alias del="'rm' "

alias dir='ls -Fas'
alias ls='ls -F'
alias lsn='ls |grep -v "\/" |grep -v "@"; ls |grep "@."'

alias vc='vi ~/.cshrc'
alias vv='vi ~/.vimrc'
## alias vl='vi ~/.login'

alias cshrc='source ~/.cshrc'
alias login='source ~/.login'

## 2020 May 24 (Sun) hard deprecate
## alias cvim='gvim -U ~/Dropbox/linux/home/.gcvimrc +"write" +"source ~/Dropbox/linux/chinese/.cvimrc" ~/ctmp &'
## alias scvim='screen -t cvim vim +"write" +"source ~/chinese/.cvimrc" ~/ctmp &'

alias vb='vim +"source ~/.pvimrc" ~/.vimrc'

alias ww='screen -x main || make mainscreen'
alias 12='ww'
alias 21='ww'
alias dd='exit'
alias sdr='screen -d -r'

alias sx='screen -xRR'
alias xx='screen -xRR'

alias sr='screen -r'

alias sl='screen -list'
alias sld='screen -list | grep -i detached'

alias sS='screen -S'
alias ss='screen -S'
alias delscr='del /tmp/screens/S-dushoff/*'

alias plainscreen='screen -dm default'
alias mainscreen='screen -c .escreenrc -dm main; screen -x main'

alias stx='text-aid-too --editor sleepy'
alias textstart='psterm textdemon; psterm text-aid; textdemon & '
alias deskstart='google-chrome & firefox & textstart'
alias camstart='guvcview -m 960x720 & '
alias classcam='guvcview -m 480x360 & '
alias rmvstart='rmview ~/./screens/tech/linux_config/rmview.json &'

alias dropboxd='~/.dropbox-dist/dropboxd &'
alias pd=dirs
alias po=popd
alias pd=pushd

alias plus='chmod +x *.pl *.awk'

alias psx='ps x'

alias smdd=msdd
## numlockx off/on
alias fastmouse='xkbset ma 60 10 10 5 2'

## Last and Downloads
alias last='ls -t *.* | head -1 '
alias lastpdf='ls -t *.pdf *.PDF | head -1 '
alias lastvim='echo Not worth it, try gvim?'
alias lastgvim='last | xargs -i gvim "{}" &'
alias lastchrome='last | xargs -i google-chrome "{}" &'
alias pdfchrome='lastpdf | xargs -i google-chrome "{}" &'
alias lastacr='lastpdf | xargs -i acroread "{}" &'
alias lastxzf='last | xargs -i tar xzf "{}"'
alias lasttotem='last | xargs -i totem "{}"'
alias lastmp='last | xargs -i mplayer "{}"'
alias lastfile='ls -t *.* | head -1 | xargs -i file "{}"'
alias dell='last | xargs -i rm -f "{}"'
alias lastcat='last | xargs -i cat "{}"'
alias lastconv='last | xargs -i cat "{}" | convert -'
alias lastdel='dell'
alias lastunzip='ls -t *.zip *.ZIP | head -1 | xargs -i unzip "{}"'
alias lastgunzip='ls -t *.gz *.GZ | head -1 | xargs -i gunzip "{}"'

alias sendable='ls -t *.send.*'
alias send='sendable | tail -1 | xargs -i touch "{}" && gol'
alias sent='sendable | head -1 | xargs -i rename "s/send/sent/" "{}"; send'

alias shots='ls -t Screen*.png'
alias lastshot='(shots) && ((shots | head -1 | xargs -i touch "{}") || (ice && false)) && gol'
alias delshot='lastdel && lastshot'

alias first='ls -t *.* | tail -1 '
alias firstdel='first | xargs -i rm -f "{}"'
alias firstplay='first | xargs -i mplayer "{}"'

alias pen='ls -t *.* | head -2 | tail -1 '

alias gol='last | xargs -i gio open "{}" &'
alias dgol='cd ~/Downloads && (gol)'
alias gop='pen | xargs -i gio open "{}" &'
alias lastpo='lastpdf | xargs -i gio open "{}" &'
alias pdflast='lastpdf | xargs -i touch "{}"'
alias golp='lastpdf | xargs -i gio open "{}" &'
alias xopen='xargs -i gio open "{}" &'

alias rootdown='ls -t ~/*.* | head -1 | xargs -i mv "{}" .'
alias lastdown='ls -t ../*.* | head -1 | xargs -i mv "{}" .'
alias lasthome='ls -t ~/*.* | head -1 | xargs -i mv "{}" .'
alias downhere='ls -t ~/Downloads/*.* | head -1 | xargs -i mv "{}" .'
alias ldo='lastdown; last'
alias lho='lasthome; last'
alias ldu='lastdown; lastunzip'
alias largo='ls -t *.R | head -1 | xargs -i make "{}"out.go'

lsth() { clear; ls -t $@ |head -10; }
alias lspdf='lsth "*.pdf"'

alias lstpdf='ls -t *.pdf *.PDF |more'
alias lsath='clear; ls -at |head'
alias lst='ls -t |more'
alias lstm='lst'

todown() { touch $@; cp "$@" ~/Downloads; }
alias downput=todown
downcall() { ls -t ~/Downloads/*.* | head -1 | xargs -i mv "{}" $@; }
downfall() { ls -t ~/Downloads/*.* | head -1 | xargs -i cp "{}" $@; }
downfinal() { ls -t ~/Downloads/* | head -1 | xargs -i mv "{}" $@; }
downlist() { ls -t Downloads/*.* | head -1 ; }
## Local- instead of download-focused
lastmove() { ls -t *.* | head -1 | xargs -i mv "{}" $@; }
lastcall() { ls -t *.* | head -1 | xargs -i mv "{}" $@; }
pencall() { ls -t *.* | head -2 | tail -1 | xargs -i mv "{}" $@; }
pentouch() { ls -t *.* | head -2 | tail -1 | xargs -i touch "{}"; }

## What? Why not just go?
lext() { ls -t *.$1 | head -1 | xargs -i make "{}".go; }

## This can be overridden in .blocal
go() { gnome-open "$@" & }

## eog -f ~/Dropbox/archive/lake.jpg ##
fastlake() { (eog -f ~/Dropbox/archive/lake.jpg) & }
plansync() { (cd ~/screens/org/Planning && make sync ); }
rtouch() { (touch ~/screens/org/Planning/report.md); }
sinklake() { reporttime Sunk; plansync; fastlake; }
lake() { (sleep $@; xdg-open ~/Dropbox/archive/lake.jpg) & }
wiss() { (sleep $@; xdg-open ~/Dropbox/archive/old_road.jpg) & }
acorns() { (sleep $@; xdg-open ~/Dropbox/courses/Lecture_images/acorns.jpg) & }
ice() { (sleep $@; xdg-open ~/Dropbox/courses/Lecture_images/ice_shelf.jpg) & }
squirrel() { (sleep $@; xdg-open ~/Dropbox/courses/3SS/bolker/lectures/pix/Red_squirrel_with_nut.jpg) & }
beaver() { (sleep $@; xdg-open ~/Dropbox/courses/Lecture_images/beaver.jpg) & }

alias sesh="clear; date; nopix; ice 484; squirrel 961; beaver 1444"
alias tesh="squirrel 1400; beaver 2800"

alias nopdf="killall evince"

## ship is a script which does sesh in a loop showing the ship at the end
alias nopix="killall sleep; sleep 0.1; killall eog"
alias shipminus="(killall ship; killall boat; killall balloon; nopix) > /dev/null 2>&1"
## Deprecated 2023 Jan 18 (Wed)
## alias shipplus="shipminus; ship &"
## alias boatplus="shipminus; boat &"

alias now='pickscreen org Planning "^[gcg_gk"'
alias now='pickscreen org Planning'

alias reportday='vsave; echo "######## " `date +"%Y %b %d (%a)"` >> ~/report.md'
alias reportblank='echo >> ~/report.md'

alias newday='reportblank; reportday; reportblank; work'
alias work='reporttime Work; now; shipminus; ship & sleep 0.1; pickscreen org Planning "^[gj"'
alias play='reporttime Play; now; shipminus; ship &'
alias meet='reporttime Meet; now; shipminus; boat &'
alias rest='reporttime Rest; reportblank; shipminus; now; balloon &'
alias stop='reporttime Stop; shipminus; '
alias minus='shipminus; '
alias fail='reporttime Fail; reportblank; shipminus; now'

alias gtag='git log | head -1 | sed -E "s/commit (......).*/\1/"'
gcq() { gcalcli --calendar jdushoff@gmail.com quick "$*" ; }
glast() { git log -- $* | head -1 | sed -E "s/commit (......).*/\1/" ;}

alias lsd="ls -t --group-directories-first | more"

## alias pdflgrep='pdfgrep $1 | sed -e"s/:.*//"'
## pdfgrep -i rubella *.pdf | sed -e "s/:.*//" | sort -u

######################################################################

## Simple quoting finally solved!
gcq() { gcalcli --calendar jdushoff@gmail.com quick "$*" ; }
gcim() { gcalcli --calendar jdushoff@gmail.com import "$*" ; }
agenda() { gcalcli --calendar jdushoff agenda --tsv --details location now +1d | awk 'BEGIN { FS = "\t"; OFS="\n" } ; { print $2, $5, $6, "" }' ; }
Agenda() { gcalcli --calendar jdushoff agenda --tsv --details location now +7d | awk 'BEGIN { FS = "\t"; OFS="\n" } ; { print $1, $2, $5, $6, "" }' ; }

######################################################################

germ() { (git rm -f $1 || rm -f $1) && echo $1: `date +"%F"` >> deleted.md; }
germ() { (git rm -f $1 || rm -f $1); }
archive() { make archive/$1; }

reporttime() { vsave; echo $1: `date +"%H:%M"` >> ~/report.md; }

ga() { grep -i $@ ~/.baliases ~/.blocal; }
gvm() { gvim -U ~/.gmvimrc Makefile $@ & }

gw() { grep -i "$@" /usr/share/dict/words.pre-dictionaries-common; }
fp() { nice find . -name "$*" -print; }
## Tests. I guess the current problem is that I can't quote further.
ffpg() { echo find . -name '$1' -print |xargs grep '$2'; }
ffpg() { echo find . -name "$1" -print; echo xargs grep "$2"; }
ffpg() { nice find . -name "$1" -print |xargs grep "$2" 2> .error.log ; }

fpgl() { nice find . -name "$1" -print |xargs grep -l "$2" 2> .error.log ; }

## Older; update if you want them
fpgt() { nice find . -name "$1" -print |xargs grep "$2" > gtmp; }
fpv() { find . -name "$1" -print |xargs vim; }
fpx() { nice find . -name "$2" -print |xargs "$1"; }

qquote() { echo 1: '$1' 2: '$2'; }

# fps() { find . -name "$@" -print |& grep -v "^find:"; }
# ff() { filegrep.pl "$1" ${HOME}/bin/find/files.txt; }
# ffg() { filegrep.pl "$1" ${HOME}/bin/find/files.txt |xargs grep "$2"; }

ssx() { screen -t $@ screen -xRR $@; }
## ssvs() { screen -t "$1" && screen bash -cl "svs"; }

ssr() { screen -t $@ screen -r $@; }
newscreen() { screen -dm $@; }
dscreen() { (cd $1; screen -dm $@); }
dxscreen() { screen -dm $@; ssx $@; }
dxscreen() { (cd $1; screen -dm $@; ssx $@); }

nxscreen() { (cd $2; screen -dm $1; ssx $1); }

escreen() { screen -c .escreenrc -dm $1; screen -x $1; }
groupscreen() { sudo su - $@ -c "screen -dm group"; }
sdm() { screen -dm $@; }
sR() { sdm $@; screen -x $@; }
dsR() { cd $@; sdm $@; screen -x $@; }
dssR() { cd $@; screen -t $1 screen -dm $@; screen -x $@; }
sh() { screen -t $1 bash; }
tsh() { screen tcsh; }

# sd() { screen -t "$@" sdir "$@"; }
# msd() { mkdir $1; screen -t $1 sdir $@; }

sd() { (cd $@ && screen -t "$@"); }
msd() { mkdir $1; sd $1; } 
sdn() { (cd $1 && screen -t "$2"); }
svn() { (cd $1 && screen -t "$2" bash -cl "vvs"); }

vi(){
	d=$(pwd | perl -pe 's|.*?dushoff/||; s|/.*||; s/^$/home/;')
	vim --servername $d $*
}

## Working from https://stackoverflow.com/questions/13767252/ubuntu-bash-script-how-to-split-path-by-last-slash
## Eventually learn about expansion and switch to "proper" method
sds() { 
	p=$( echo $1 | perl -pe 's|/*$||' );
	dir=`dirname "$p"`
	sub=`basename "$p"`
	(cd $dir && make $sub)
	sdn $dir/$sub $sub; 
}

## for branches: make Makefile one level up
sbs() { 
	p=$( echo $1 | perl -pe 's|/*$||' );
	dir=`dirname "$p"`
	sub=`basename "$p"`
	(cd $dir && make $sub)
	(cd $dir && make $sub/Makefile)
	svn $dir/$sub $sub; 
}

svs() { 
	p=$( echo $1 | perl -pe 's|/*$||' );
	dir=`dirname "$p"`
	sub=`basename "$p"`
	(cd $dir && make $sub && make $sub/Makefile)
	(cd $dir/$sub && make Makefile)
	svn $dir/$sub $sub; 
}

dx() {
	p=$( echo $1 | perl -pe 's|/*$||' );
	dir=$( echo $p | perl -pe 's|/[^/]*$||' );
	sub=$( echo $p | perl -pe 's|.*/||' );
	(cd $p && screen -dm $sub); ssx $sub; 
} 

basedir(){
	p=$( echo $1 | perl -pe 's|(.*?)/*([^/]*)/*$|$1|' );
	echo $p;
}

notbasedir(){
	p=$( echo $1 | perl -pe 's|(.*?)/*([^/]*)/*$|$2|' );
	echo $p;
}

# Processes; I usually use killall now
psg() { ps -aux | grep $@ | grep -v grep; }
psj() { ps x | grep $@ | grep -v grep; }
pslist() { ps x | grep $@ | grep -v grep; }
psterm() { pslist $1 | perl -pe 's/([0-9]) .*/$1/' | xargs kill; sleep 1; pslist $1; }
psnuke() { pslist $1 | perl -pe 's/([0-9]) .*/$1/' | xargs kill -9; }
# pskill() { psterm $1; psnuke $1; }
tasklist() { pslist $1 | grep -v time | grep -v make | grep -v vim |grep -v csh |grep -v screen |grep -v ssh; }
taskterm() { tasklist $1 | awk -f ~/.mk | xargs kill; }
tasknuke() { tasklist $1 | awk -f ~/.mk | xargs kill -9; }
taskflush() { tasklist $1 | awk -f ~/.mk | xargs kill -18; }
back() { kill -20 $@; sleep 1; kill -18 $@; }
rc() { stty rows $1; stty cols $2; }

md() { mkdir $@; cd $@; }

scl() { scp -r dushoff@lalashan.mcmaster.ca:$@; }
sctl() { scp -r $@ dushoff@lalashan.mcmaster.ca:; }
scm() { scp -r dushoff@mathserv.mcmaster.ca:$@; }
sctm() { scp -r $@ dushoff@mathserv.mcmaster.ca:; }
scz() { scp dushoff@zebra.sharcnet.ca:$@; }
sctz() { scp $@ dushoff@zebra.sharcnet.ca:; }

lsh() { clear; ls -t $1 |head; }

zarc() { mkdir zzz; mv .* *; mv * $@; }
source ~/.blocal
