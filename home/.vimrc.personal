
let $BASH_ENV = "~/.bashrc"

" Open target using edited line (like gx, but less fragile for URLs)
" 2020 Nov 02 (Mon) Ubuntu 20 gx in visual mode is super weird
" Old version
" nmap gl :s/^[# \t>*]*//<C-M>Vgxu:nohlsearch<C-M>
" Just copy and open a new window
" nmap gl :s/^[# \t>*]*//<C-M>VYu:nohlsearch<C-M>:!cw<C-M>
" Use execute (why is one u better, or is it? 2020 Nov 05 (Thu)
" nmap gl :s/^[# \t>*]*/go /<C-M>gXuu:nohlsearch<C-M>
nmap gl :s/^[# \t>*]*/go /<C-M>gXu:nohlsearch<C-M>

nmap gL gm1G/https*:<C-M>gl

com! -nargs=* -complete=file Make make <args> | edit <args>

" Execution
nmap gC :s/^[%# \t*]*//<C-M>H
nmap gX gCV!bash > ~/.cmdresult<C-M>:nohlsearch<C-M>
nmap gE gXk:r ~/.cmdresult<C-M>
nmap ge gEuA ##<ESC>:r !grep bash: ~/.cmdresult \|\| true<C-M>:s/##[ #]*$/##/<C-M>
nmap GE gEP
nmap gb VygCV:!bc -l<C-M>I## <ESC>PJ
nmap gD :!downcall <cfile><C-M>

nmap g# :s/[ #]*$//<C-M>H

" Time and date
nmap <C-T> :put=strftime('%H:%M')<C-M>Ea#<ESC>
nmap <C-D> :put=strftime('%Y %b %d (%a)')<C-M>

imap <C-T> <ESC>mm<C-T>0"md$dd`m"mpa
imap <C-D> <ESC>mm<C-D>0"md$dd`m"mpa
imap <C-G> %>%

" Files
nmap <C-U> :files<C-M>

" Copy paste
nn gz ggVG"+x
nn gy ggVG"+y
nn gv "+gP
nmap <F10> gv
imap <F10> <ESC>a <ESC>gvs
nmap <F12> o<ESC>gv
imap <F12> <ESC><F12>

" go Github?
map gG :!make upstream<C-M>
map gH :!make hupstream<C-M>

nmap gG :s/^[# \t*]*/https:\/\/www.google.ca\/search?q=/<C-M>:s/ /+/g<C-M>Vgxu:nohlsearch<C-M>

map <F3> <C-^>

" Inline R escape
vmap r di`r `<ESC>P
imap <LeftMouse> <nop>
imap <2-LeftMouse> <nop>

ab fuck $#@!
ab fucker $#@!er
ab fucked $#@!ed
ab fucking $#@!ing
ab maclib .libaccess.lib.mcmaster.ca

ab tyvm Thank you very much
ab tyfm Thank you for your message
ab tyfr Thank you for your reply
ab tyfh Thanks for your help
ab tfah Thanks for any help
ab tyah Thanks for any help
ab tyfa Thank you for your message.  I look forward to considering your application
ab tyfs Thanks for your submission
ab sfsr Sorry for slow response
ab wdyt What do you think

ab SJ Sincerely,<C-M><C-M>JD
ab BBJ Best,<C-M><C-M>JD
ab JJ Jonathan Dushoff
ab Jj Jonathan
ab hys 黃友森
ab cfs 施群芳
ab ba4 爸
ab wsry 萬事如意

nmap S _kO
nmap _ o<ESC>O<C-M><ESC>70i-<ESC>
nmap - mmG_dd'm_
nmap \ i\
nmap dl :.g/^$/d<C-M>

" Protect from instant erasure
inoremap <c-u> <c-g>u<c-u>

" Paren stuff
imap {} {<C-M>}<ESC>O<TAB>
imap () ( )<ESC>hs

" 2019 Sep 12 (Thu) Hacking at nmap; not really in touch with older uses
vmap G_ j/---------------.*/e<C-M>
nmap G_ /---------------.*/e<C-M>H
omap G_ j/---------------/+1<C-M>

vmap g_ k?---------------<C-M>z<C-M>
nmap g_ ?---------------<C-M>Hz<C-M>
omap g_ k?---------------/-1<C-M>

nmap D_ VG_d
nmap d_ Vg_d

" Vocab abbreviations
ab dfe disease-free equilibrium
ab eqa equilibria
ab eqm equilibrium
ab qeqa quasi-equilibria
ab qeqm quasi-equilibrium
ab eqn equation
ab eqns equations

ab Joanthan Jonathan
ab ahve have
ab taht that
ab becuase because
ab sned send
ab teh the
ab Bestm Best,

" Clear blank lines
vmap @@ :s/^[>  ^I]*$//<C-M>:'<,'>s/[ ]/ /g<C-M>
nmap @@ VG@@

"Quote and reformat
vmap $$ :s/./> &/<C-M>:'<,'>!cat -s<C-M>H
nmap $$ VG$$

" Unquoting (with tags)?
vmap >> :g/^<.*>\s*$/d<C-M>:'<,'>s/.*>//<C-M>
nmap >> VG>>

" Unquoting?
vmap + :s/^[>  	]*//<C-M>
nmap + VG+

nmap @f gg/folders<C-M>

vmap & !~/bin/quote.pl<C-M>
nmap & VG&

ab ptp Power to the people

nn Q gq
nn gm 1<C-^>
nn gc 2<C-^>

" com! W :w<C-M>:bd<C-M>

""""""""""""""" Chinese
" Unknown and unused tweak
" com! Ss source ~/Dropbox/linux/chinese/.svimrc
com! Sv source ~/.vimrc

com! Sc source ~/Dropbox/linux/chinese/.cvimrc.core
nmap <C-C> :Sc<C-M>
imap <C-C> <ESC>mm<C-C>`ma

com! Sy source ~/Dropbox/linux/chinese/.cvimrc.fix
nmap <C-Y> :Sy<C-M>
imap <C-Y> <ESC>mm<C-Y>`ma

""""""""""""""" " Non-breaking space stuff (combine with other ascii…)
com! Space s/ / /g
com! Pack %s/^\s\s*//

" current mail-trading text-aid-too
nmap M :source ~/.vimrc.tat<C-M>gg@@<C-O>
nmap LL gz

" select a paragraph
nmap <C-P> }{V}

" Title, subtitle, html paragraphing (!!!) and date
nmap @t :s/^[ kb= ]*//g:s/[= ]*$//gyyp:s/./=/gH
nmap @b :s/^[ kb= ]*//g:s/[= ]*$//gyyp:s/./-/gH
nmap @h :%s/^$/<p>/
nmap @d <C-D>@t

" paragraph paragraphing
nmap @c :1,$!cat -s<C-M>

" Reporting
nmap @r gkGp<C-^>
vmap <C-K> c<ESC>@r
nmap <C-K> }k<C-T><C-P><C-K>
nmap <C-V> <C-P><C-K>

" Clear space-only lines
nmap @s :%s/^\s\s*$//<C-M>

let g:netrw_browsex_viewer= "setsid xdg-open"

" Use HTML Entity (decimal) code
digraphs !? 8253 " interrobang ‽
digraphs ?! 8253 " interrobang ‽
" digraphs !, ☹
digraphs h. 7717 " ḥ (for hebrew)
digraphs H. 7716
digraphs  160 " non-breaking space
digraphs *.   183 " · dot ·
digraphs --  8211 " en-dash
digraphs __  8212 " em-dash

digraphs `   8216 " single left quote ‘
digraphs '   8217 " single right quote ’
digraphs ``  8220 " double left quote “
digraphs ''  8221 " double right quote ”
digraphs ,,  8222 " double bottom quote „

digraphs **  8226 " bullet
digraphs ..  8230 " horizontal ellipsis
digraphs ql 12298 " Chinese left double quotation 《
digraphs qr 12299 " Chinese right double quotation 》
digraphs cp 12290 " Chinese full stop (period) 。
digraphs c. 12290 " Chinese full stop (period) 。
digraphs Re 8475 " Script R ℛ
digraphs =- 8801 " Identical (equivalent) ≡

digraphs <3  9829 " heart ♥
digraphs oo 9917 " soccer ball ⚽
digraphs :(  9785 " white frowning face ☹
digraphs :)  9786 " white smiling face ☺
digraphs ZZ  8484 " integer Z ℤ
digraphs PP  182 " ¶ paragraph mark

digraphs fm 9792 " female symbol ♀
digraphs mm 9794 " male symbol ♂

digraphs el 8467 " math cursive ell ℓ

" Pre-existing things I want to remember
" This is stupid; I should make them into good things. If it's easy to get numbers.
" digraphs X* × multiplication
" digraphs == ⇔ double left-right arrow
" digraphs ?2 ≈ approximately equal

vmap Y "+y
vmap X "+x

" pull an email address from a formatted list
nmap ym f<lvt>Y

" execute pathogen#infect()
augroup markdown
    au!
    au BufNewFile,BufRead *.md,*.markdown setlocal filetype=ghmarkdown
augroup END

" Set the filetype based on the file's extension
" "setfiletype foo" is a wimpier version (respects some sort of pre-status)
au BufRead,BufNewFile *.def set filetype=make
